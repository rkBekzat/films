basePath: /
definitions:
  handler.signInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handler.signUpInput:
    properties:
      email:
        type: string
      gender:
        type: string
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - email
    - gender
    - password
    - role
    - username
    type: object
  model.Actor:
    properties:
      birth_date:
        type: string
      gender:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  model.Film:
    properties:
      actors:
        items:
          $ref: '#/definitions/model.Actor'
        type: array
      description:
        type: string
      id:
        type: string
      rating:
        type: number
      released_at:
        type: string
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: WEB API
  title: Film API
  version: "1.0"
paths:
  /api/account/sign_in:
    post:
      consumes:
      - application/json
      description: login
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses: {}
      summary: SignIn
      tags:
      - Account
  /api/account/sign_up:
    post:
      consumes:
      - application/json
      description: sign up the user
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signUpInput'
      produces:
      - application/json
      responses: {}
      summary: Information
      tags:
      - Account
  /api/actor/add:
    post:
      consumes:
      - application/json
      description: adding actor
      parameters:
      - description: user data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Actor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add actor
      tags:
      - actor
  /api/actor/delete:
    delete:
      consumes:
      - application/json
      description: deleting actor
      parameters:
      - description: actor ID
        in: path
        name: actor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: delete
      tags:
      - actor
  /api/actor/film_list:
    get:
      consumes:
      - application/json
      description: filmed actor
      parameters:
      - description: actor ID
        in: path
        name: actor_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Film'
            type: array
      security:
      - ApiKeyAuth: []
      summary: films
      tags:
      - actor
  /api/actor/get:
    get:
      consumes:
      - application/json
      description: get actor
      parameters:
      - description: actor ID
        in: query
        name: actor_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Actor'
      security:
      - ApiKeyAuth: []
      summary: Get
      tags:
      - actor
  /api/actor/search:
    get:
      consumes:
      - application/json
      description: adding actor
      parameters:
      - description: actor ID
        in: path
        name: text
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Actor'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Add actor
      tags:
      - actor
  /api/actor/update:
    put:
      consumes:
      - application/json
      description: update actor
      parameters:
      - description: user data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Actor'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: update
      tags:
      - actor
  /api/film/add:
    post:
      consumes:
      - application/json
      description: adding film
      parameters:
      - description: user data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Film'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Add film
      tags:
      - film
  /api/film/delete:
    delete:
      consumes:
      - application/json
      description: deleting film
      parameters:
      - description: actor ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: delete
      tags:
      - actor
  /api/film/info:
    get:
      consumes:
      - application/json
      description: get film by id
      parameters:
      - description: film ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Film'
      security:
      - ApiKeyAuth: []
      summary: get
      tags:
      - film
  /api/film/list:
    get:
      consumes:
      - application/json
      description: get films proper
      parameters:
      - description: offset
        in: path
        name: offset
        required: true
        type: integer
      - description: limit
        in: path
        name: limit
        required: true
        type: integer
      - description: order by which column
        in: path
        name: order_by
        required: true
        type: string
      - description: order ASC or DESC
        in: path
        name: order
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Film'
            type: array
      security:
      - ApiKeyAuth: []
      summary: get films
      tags:
      - film
  /api/film/search:
    get:
      consumes:
      - application/json
      description: search film by text
      parameters:
      - description: search title by text
        in: path
        name: text
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Film'
            type: array
      security:
      - ApiKeyAuth: []
      summary: search
      tags:
      - film
  /api/film/update:
    put:
      consumes:
      - application/json
      description: update film by text
      parameters:
      - description: search title by text
        in: path
        name: id
        required: true
        type: string
      - description: user data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/model.Film'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: update
      tags:
      - film
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
